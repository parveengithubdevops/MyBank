// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyBank.Infrastructure.EntityFrameworkCore;

namespace MyBank.Infrastructure.EntityFrameworkCore.Migrations
{
    [DbContext(typeof(AccountContext))]
    [Migration("20210318235105_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.4");

            modelBuilder.Entity("MyBank.Domain.Account", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("MyBank.Domain.Account", b =>
                {
                    b.OwnsOne("MyBank.Domain.AccountBalance", "Balance", b1 =>
                        {
                            b1.Property<string>("AccountId")
                                .HasColumnType("TEXT");

                            b1.Property<float>("Amount")
                                .HasColumnType("REAL")
                                .HasColumnName("Amount");

                            b1.HasKey("AccountId");

                            b1.ToTable("Accounts");

                            b1.WithOwner()
                                .HasForeignKey("AccountId");
                        });

                    b.OwnsOne("MyBank.Domain.AccountNumber", "Number", b1 =>
                        {
                            b1.Property<string>("AccountId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Number")
                                .HasColumnType("TEXT")
                                .HasColumnName("Number");

                            b1.HasKey("AccountId");

                            b1.ToTable("Accounts");

                            b1.WithOwner()
                                .HasForeignKey("AccountId");
                        });

                    b.Navigation("Balance");

                    b.Navigation("Number");
                });
#pragma warning restore 612, 618
        }
    }
}
